knitr::kable(caption = "Data about men and women")
knitr::opts_chunk$set(echo = FALSE)
age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = "10-15", "16-20", "16-20", "16-20", "10-15", "21-25")
library(tidyverse)
age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = "10-15", "16-20", "16-20", "16-20", "10-15", "21-25")
library(tidyverse)
age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25"))
library(tidyverse)
(age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25")))
table(age$age)
table(age$age) %>% t()
prop.table(table(age$age))
knitr::opts_chunk$set(echo = FALSE)
## create a vector of age
age <- c(14, 12, 13.5, 16, 10, 15.4)
mean(age)
sort(age)
(13.5+14)/2
median(age)
mean(c(10.0, 12.0, 13.5, 14.0, 15.4, 70))
median(c(10.0, 12.0, 13.5, 14.0, 15.4, 70))
hist(c(10,12,13.5,14,15.4,70))
library(dslabs)
data("heights")
head(heights)
-
knitr::opts_chunk$set(echo = FALSE)
table(age$age)
library(tidyverse)
(age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25")))
table(age$age)
(age2 <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25"),
sex = c("Male", "Female", "Male", "Male", "Female")))
(age2 <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25"),
sex = c("Male", "Female", "Male", "Male", "Male", "Female")))
table(age2$age, age2$sex)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
table(age$age) %>% knitr::kable()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
(age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25")))
table(age$age) %>% knitr::kable()
prop.table(table(age$age))
(age2 <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25"),
sex = c("Male", "Female", "Male", "Male", "Male", "Female")))
table(age2$age, age2$sex)
table(age$age) %>% knitr::kable(col.names = c("Age", "Freq"))
prop.table(table(age$age)) %>% knitr::kable()
prop.table(table(age$age))
age <- c(14, 12, 13.5, 16, 10, 15.4)
mean(age)
mean(c(14, 12, 13.5, 16, 10, 15.4))
## arrange in ascending order
sort(age)
median = (13.5 + 14) / 2
median
median(age)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
(age <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25")))
table(age$age) %>% knitr::kable(col.names = c("Age", "Freq"))
prop.table(table(age$age))
(age2 <- tibble(name = c("Paul", "Catherine", "Oloo", "Etyang", "Nyaga", "Mwajuma"),
age = c("10-15", "16-20", "16-20", "16-20", "10-15", "21-25"),
sex = c("Male", "Female", "Male", "Male", "Male", "Female")))
table(age2$sex)
table(age2$age, age2$sex)
View(age2)
table(age2$sex)
table(age2$age, age2$sex)
knitr::opts_chunk$set(echo = TRUE)
set.seed(100, sample.kind = "Rounding")
x <- rnorm(30, mean = 100, sd = 4)
x
y <- rnorm(30, mean = 100, sd = 10)
y
hist(x)
par(mfrow = 2)
?par
par(mfrow = c(2,1))
hist(x)
hist(y)
?hist
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
x %>% ggplot() + geom_histogram()
x %>% data_frame() %>% ggplot() + geom_histogram()
x %>% data_frame()
x %>% data_frame() %>%
rename(x = .) %>%
ggplot() + geom_histogram()
x %>% data_frame() %>%
rename(x = `.`) %>%
ggplot() + geom_histogram()
x %>% data_frame() %>%
rename(x = `.`) %>%
ggplot() + geom_histogram()
set.seed(100, sample.kind = "Rounding")
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(x, y)
our_data
set.seed(100, sample.kind = "Rounding")
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(x, y) %>%
pivot_longer(names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(x, y) %>%
pivot_longer(., names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(id, x, y) %>%
pivot_longer(id, names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(id, x, y) %>%
pivot_longer(id, names_to = sample, values_to = measure)
our_data <- data.frame(id, x, y)
View(our_data)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(id, x, y) %>%
pivot_longer(-id, names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data.frame(id, x, y) %>%
pivot_longer(-id, names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y) %>%
pivot_longer(-id, names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y)
pivot_longer(-id, names_to = sample, values_to = measure)
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y)
our_data <- our_data %>% pivot_longer(-id, names_to = sample, values_to = measure)
?pivot_longer
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y)
our_data <- our_data %>% pivot_longer(-id, names_to = "sample", values_to = "measure")
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y) %>%
pivot_longer(-id, names_to = "sample", values_to = "measure")
our_data
set.seed(100, sample.kind = "Rounding")
id <- 1:30 %>% as.character()
x <- rnorm(30, mean = 100, sd = 4)
y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(id, x, y) %>%
pivot_longer(-id, names_to = "sample", values_to = "measure")
head(our_data)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_wrap(~sample)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_wrap(sample ~)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(. ~ sample())
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(.~ sample())
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(.~ sample)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(sample ~ .)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(sample ~ .) +
ggtheme::theme_clean()
our_data %>%
ggplot(aes(x = measure)) + geom_histogram() +
facet_grid(sample ~ .) +
ggthemes::theme_clean()
our_data %>%
ggplot(aes(x = measure)) + geom_histogram(col = "black", fill = "skyblue") +
facet_grid(sample ~ .) +
ggthemes::theme_clean()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
set.seed(100, sample.kind = "Rounding")
my_id <- 1:30 %>% as.character()
my_x <- rnorm(30, mean = 100, sd = 4)
my_y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(my_id, my_x, my_y) %>%
pivot_longer(-my_id, names_to = "sample", values_to = "measure")
head(our_data)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram(col = "black", fill = "skyblue") +
facet_grid(sample ~ .) +
ggthemes::theme_clean() +
labs(title = "Histogram of x and y respectively")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tibble)
tribble(~ X, ~X-X_bar, ~ `(X - X_bar)^2`,
"1", "", "",
"2", "", "",
"3", "", "",
"4", "", "",
"5", "", "")
library(tibble)
tribble(~ X, ~ `(X-X_bar)`, ~ `(X - X_bar)^2`,
"1", "", "",
"2", "", "",
"3", "", "",
"4", "", "",
"5", "", "")
library(tibble)
tribble(~ X, ~ `(X-X_bar)`, ~ `(X - X_bar)^2`,
"1", "1-3 = -2", "",
"2", "2-3 = -1", "",
"3", "3-3 = 0", "",
"4", "4-3 = 1", "",
"5", "5-3 = 2", "")
library(tibble)
tribble(~ X, ~ `(X-X_bar)`, ~ `(X - X_bar)^2`,
"1", "1-3 = -2", "4",
"2", "2-3 = -1", "1",
"3", "3-3 = 0", "0",
"4", "4-3 = 1", "1",
"5", "5-3 = 2", "4")
sqrt(10)
variance_example_data <- 1:5 ## The colon is a shortcut for writing a series of numbers in R.
## try typing 1:10 in your console ans see what happens.
## var and sd are the functions for variance and standard deviation in R.
var(variance_example_data)
sd(variance_example_data)
15/4
sum(1:5)
?var
variance_example_data <- 1:5 ## The colon is a shortcut for writing a series of numbers in R.
## try typing 1:10 in your console ans see what happens.
## var and sd are the functions for variance and standard deviation in R.
var(variance_example_data, method = "pearson")
variance_example_data <- 1:5 ## The colon is a shortcut for writing a series of numbers in R.
## try typing 1:10 in your console ans see what happens.
## var and sd are the functions for variance and standard deviation in R.
var(variance_example_data)
sd(variance_example_data)
var(1:5)
sqrt(2.5)
y <- seq(from = 1, to = 30, by = 3)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
set.seed(100, sample.kind = "Rounding")
my_id <- 1:30 %>% as.character()
my_x <- rnorm(30, mean = 100, sd = 4)
my_y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(my_id, my_x, my_y) %>%
pivot_longer(-my_id, names_to = "sample", values_to = "measure")
head(our_data)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram(col = "black", fill = "skyblue") +
facet_grid(sample ~ .) +
ggthemes::theme_clean() +
labs(title = "Histogram of x and y respectively")
library(tibble)
tribble(~ X, ~ `(X-X_bar)`, ~ `(X - X_bar)^2`,
"1", "1-3 = -2", "4",
"2", "2-3 = -1", "1",
"3", "3-3 = 0", "0",
"4", "4-3 = 1", "1",
"5", "5-3 = 2", "4")
variance_example_data <- 1:5 ## The colon is a shortcut for writing a series of numbers in R.
## Try typing 1:10 in your console ans see what happens.
## var and sd are the functions for variance and standard deviation in R.
var(variance_example_data)
sd(variance_example_data)
another_y <- seq(from = 1, to = 30, by = 3)
another_y
another_y <- seq(from = 1, to = 30, by = 3)
another_y
set.seed(10, sample.kind = "Rounding")
z <- rnorm(6, mean = 100, sd = 40)
another_y <- seq(from = 1, to = 30, by = 3)
another_y
set.seed(10, sample.kind = "Rounding")
z <- rnorm(6, mean = 100, sd = 40)
z
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
ages <- c("Toddler", "Teen", "Teen", "Adult",
"Adult", "Elder", "Adult", "Toddler", "Teen", "Teen")
ages
1:5
quantile(1:5, probs = 0.25)
quantile(1:5, probs = 0.25 # 0.25 gives first quantile)
quantile(1:5, probs = 0.25) # 0.25 gives first quantile
quantile(1:5, probs = 0.5) # 0.5 gives second quantile or median.
median(1:5) ## Just to confirm median is the second quartile
quantile(1:5, probs = 0.75) # 0.75 gives third quantile.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
set.seed(100, sample.kind = "Rounding")
my_id <- 1:30 %>% as.character()
my_x <- rnorm(30, mean = 100, sd = 4)
my_y <- rnorm(30, mean = 100, sd = 10)
our_data <- data_frame(my_id, my_x, my_y) %>%
pivot_longer(-my_id, names_to = "sample", values_to = "measure")
head(our_data)
our_data %>%
ggplot(aes(x = measure)) + geom_histogram(col = "black", fill = "skyblue") +
facet_grid(sample ~ .) +
ggthemes::theme_clean() +
labs(title = "Histograms for x and y, respectively")
our_data %>%
ggplot(aes(x = sample, y = measure, fill = sample)) + geom_histogram(col = "black") +
ggthemes::theme_clean() +
labs(title = "Box plot for x and y, respectively")
our_data %>%
ggplot(aes(x = sample, y = measure, fill = sample)) + geom_boxplot(col = "black") +
ggthemes::theme_clean() +
labs(title = "Box plot for x and y, respectively")
our_data %>%
ggplot(aes(x = sample, y = measure, fill = sample)) + geom_boxplot(col = "black") +
ggthemes::theme_clean() +
labs(title = "Box plot for x and y, respectively") +
theme(legend.position = "none")
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
freq_tables <- data.frame(Response = c("I like the programs", "I watch due to peer pressure",
"I don’t know", "I do not watch"), Frequency = c(15, 12, 6, 7))
View(freq_tables)
library(readxl)
freq_tables <- data.frame(Response = c("I like the programs", "I watch due to peer pressure",
"I don’t know", "I do not watch"), Frequency = c(15, 12, 6, 7),
Relative_frequency = c(37.5, 30, 15, 17.5))
library(readxl)
freq_tables <- data.frame(Response = c("I like the programs", "I watch due to peer pressure",
"I don’t know", "I do not watch"), Frequency = c(15, 12, 6, 7),
Relative_frequency = c(37.5, 30, 15, 17.5))
View(freq_tables)
library(readxl)
freq_tables <- data.frame(Response = c("I like the programs", "I watch due to peer pressure",
"I don’t know", "I do not watch"), Frequency = c(15, 12, 6, 7),
Relative_frequency = c(37.5, 30, 15, 17.5))
freq_tables
freq_tables %>% ggplot(aes(x = Response, y = Frequency)) + geom_col()
library(readxl)
library(tidyverse)
freq_tables <- data.frame(Response = c("I like the programs", "I watch due to peer pressure",
"I don’t know", "I do not watch"), Frequency = c(15, 12, 6, 7),
Relative_frequency = c(37.5, 30, 15, 17.5))
freq_tables %>% knitr::kable()
freq_tables %>% ggplot(aes(x = Response, y = Frequency)) + geom_col()
freq_tables %>% ggplot(aes(x = Response, y = Frequency, fill = Response)) +
geom_col(position = "stack")
freq_tables %>% ggplot(aes(x = Response, y = Frequency, fill = Response)) +
geom_bar(position="stack", stat="identity")
freq_tables %>% ggplot(aes(Frequency, fill = Response)) +
geom_bar(position="stack", stat="identity")
freq_tables %>% ggplot(aes(Frequency, fill = Response)) +
geom_bar(position="stack")
freq_tables %>% ggplot(aes(x = Frequency, y = Response, fill = Response)) +
geom_col()
freq_tables %>% ggplot(aes(y = Frequency, x = Response, fill = Response)) +
geom_col()
freq_tables %>% ggplot(aes(x = Response, y = Frequency, fill = Response)) +
geom_col()
freq_tables %>% ggplot(aes(x = fct_reorder(Response, Frequency, max), y = Frequency, fill = Response)) +
geom_col()
freq_tables %>%
ggplot(aes(x = "",
y = Frequency, fill = Response)) +
geom_col() + ggtheme
freq_tables %>%
ggplot(aes(x = "",
y = Frequency, fill = Response)) +
geom_col()
freq_tables %>%
ggplot(aes(x = "",
y = Frequency, fill = Response)) +
geom_col() + coord_polar()
freq_tables %>%
ggplot(aes(y = "",
x = Frequency, fill = Response)) +
geom_col() + coord_polar()
freq_tables %>%
ggplot(aes(y = "",
x = Frequency, fill = Response)) +
geom_col() + coord_polar() +
ggthemes::theme_clean()
freq_tables %>%
ggplot(aes(y = "",
x = Frequency, fill = Response)) +
geom_col() + coord_polar() +
ggthemes::theme_clean()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
freq_tables %>%
ggplot(aes(x = Response, y = Frequency, fill = Response)) +
geom_col()
happy_data <- data.frame(Response = c("Very Happy", "Mostly Happy", "Neutral", "Mostly Unhappy", "Unhappy"),
Frequency = c(200, 700, 1000, 500, 2000))
happy_data <- data.frame(Response = c("Very Happy", "Mostly Happy", "Neutral", "Mostly Unhappy", "Unhappy"),
Frequency = c(200, 700, 1000, 500, 2000))
happy_data %>% knitr::kable()
happy_data %>%
mutate(relative_freq = freq/(sum(freq) * 100))
happy_data %>%
mutate(relative_freq = Frequency/(sum(Frequency) * 100))
happy_data %>%
mutate(relative_freq = (Frequency/(sum(Frequency) * 100))
happy_data %>%
mutate(relative_freq = (Frequency * 100/sum(Frequency)))
happy_data %>%
mutate(relative_freq = (Frequency * 100/sum(Frequency))) %>%
knitr::kable()
happy_data <-  happy_data %>%
mutate(relative_freq = (Frequency * 100/sum(Frequency))) %>%
knitr::kable()
happy_data
happy_data %>%
ggplot(x = "", y = Frequency, fill = Response) +
geom_col()
happy_data %>%
ggplot(aes(x = "", y = Frequency, fill = Response)) +
geom_col()
happy_data <-  happy_data %>%
mutate(relative_freq = (Frequency * 100/sum(Frequency)))
happy_data <- data.frame(Response = c("Very Happy", "Mostly Happy", "Neutral", "Mostly Unhappy", "Unhappy"),
Frequency = c(200, 700, 1000, 500, 2000))
happy_data %>% knitr::kable()
happy_data <-  happy_data %>%
mutate(relative_freq = (Frequency * 100/sum(Frequency)))
happy_data %>% knitr::kable()
happy_data %>%
ggplot(aes(x = "", y = Frequency, fill = Response)) +
geom_col()
happy_data %>%
ggplot(aes(x = "", y = Frequency, fill = Response)) +
geom_col() + coord_polar()
happy_data %>%
ggplot(aes(y = "", x = Frequency, fill = Response)) +
geom_col() + coord_polar()
happy_data %>%
ggplot(aes(x = fct_reorder(Response, relative_freq, max), y = relative_freq, fill = Response)) +
geom_col()
library(readxl)
cont_tables <- read_excel("freq_tables.xlsx",
sheet = "cont_data")
head(cont_tables, 10)
table(cont_tables$Comment, cont_tables$Sex)
prop.table(table(cont_tables$Comment, cont_tables$Sex), 1)
prop.table(table(cont_tables$Comment, cont_tables$Sex), 2)
happy_data %>%
ggplot(aes(y = "", x = relative_freq, fill = Response)) +
geom_col() + coord_polar() +
labs(title = "Happiness in Kenya")
prop.table(table(cont_tables$Comment, cont_tables$Sex), 2) %>% knitr::kable(caption = "Responses")
prop.table(table(cont_tables$Comment, cont_tables$Sex), 1) %>% knitr::kable(caption = "Responses")
freq_tables %>%
ggplot(aes(x = fct_reorder(Response, Frequency, max), y = Frequency, fill = Response)) +
geom_col()
freq_tables %>%
ggplot(aes(x = fct_reorder(Response, Frequency, max), y = Frequency, fill = Response)) +
geom_col() + labs(x = "Response", y = "Frequency", title = "Responses on Soap Operas")
View(cont_tables)
cont_tables %>%
ggplot(aes(x = Comment, y = Sex)) +
geom_tile()
cont_tables %>%
ggplot(aes(x = Comment, y = Sex, fill = Sex)) +
geom_tile()
